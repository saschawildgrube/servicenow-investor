<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_investor.CreateInvestorTasksForUser</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>CreateInvestorTasksForUser</name>
        <script><![CDATA[function CreateInvestorTasksForUser(strUserSysId)
{
	var RenderValue = x_snc_devtools.RenderValue;
	var GetStringValue = x_snc_devtools.GetStringValue;
	var GetFloatValue = x_snc_devtools.GetFloatValue;
	var GetDateNow = x_snc_devtools.GetDateNow;
	var StringPadStart = x_snc_devtools.StringPadStart;
	var RenderDate = x_snc_devtools.RenderDate;
	var TimeAddDays = x_snc_devtools.TimeAddDays;


	var strUserSysId = GetStringValue(strUserSysId);

	var aInstruments = [];
	var strDateToday = GetDateNow();
	var strDateReference = RenderDate(TimeAddDays(x_snc_devtools.GetTimeNow(),-3));
	
	var grPortfolios = new GlideRecord('x_snc_investor_portfolio');
	grPortfolios.addQuery('owner','=',strUserSysId)
	grPortfolios.query();
	while (grPortfolios.next())
	{
	
		var grPositions = new GlideRecord('x_snc_investor_position');
		grPositions.addQuery('portfolio','=',grPortfolios.sys_id);
		grPositions.query();
		while (grPositions.next())
		{
			aInstruments.push(GetStringValue(grPositions.instrument));
			
			var fPerformance = GetFloatValue(grPositions.performance);

			
			// trend change: Bull to Bear: Cash out
			if (fPerformance > 0)
			{
				priceframe = GetPriceFrameForInstrument(grPositions.instrument,grPortfolios.currency,grPositions.price_avg_date,strDateToday);
				if (priceframe != false)
				{
					var fHigh = priceframe.high;
					var fBestPrice = GetFloatValue(grPositions.price_best);

					var fPerformanceSinceHigh = CalculatePerformance(fHigh,fBestPrice);

					//Debug(grPositions.instrument.name + ' '+ fPerformanceSinceHigh);

					//CreateInvestorTask('cash_out',-30,grPortfolios.owner,grPortfolios.sys_id,grPositions.sys_id,grPositions.instrument);
					if (fPerformanceSinceHigh < -30)
					{
						CreateInvestorTask('position_performance_since_high',-30,
							grPortfolios.owner,grPortfolios.sys_id,grPositions.sys_id,grPositions.instrument);
					}
					else if (fPerformanceSinceHigh < -20)
					{
						CreateInvestorTask('position_performance_since_high',-20,
							grPortfolios.owner,grPortfolios.sys_id,grPositions.sys_id,grPositions.instrument);
					}
					else if (fPerformanceSinceHigh < -10)
					{
						CreateInvestorTask('position_performance_since_high',-10,
							grPortfolios.owner,grPortfolios.sys_id,grPositions.sys_id,grPositions.instrument);
					}


				}
			}
			
			
			
			// Position performance: Loss Warning
			if (fPerformance < -30)
			{
				CreateInvestorTask('position_performance',-30,grPortfolios.owner,grPortfolios.sys_id,grPositions.sys_id,grPositions.instrument);
			}
			else if (fPerformance < -20)
			{
				CreateInvestorTask('position_performance',-20,grPortfolios.owner,grPortfolios.sys_id,grPositions.sys_id,grPositions.instrument);
			}
			else if (fPerformance < -10)
			{
				CreateInvestorTask('position_performance',-10,grPortfolios.owner,grPortfolios.sys_id,grPositions.sys_id,grPositions.instrument);
			}

			// Position Performance: Growth Notification
			if (fPerformance > 100)
			{
				CreateInvestorTask('position_performance',100,grPortfolios.owner,grPortfolios.sys_id,grPositions.sys_id,grPositions.instrument);
			}
			else if (fPerformance > 50)
			{
				CreateInvestorTask('position_performance',50,grPortfolios.owner,grPortfolios.sys_id,grPositions.sys_id,grPositions.instrument);
			}
			else if (fPerformance > 25)
			{
				CreateInvestorTask('position_performance',25,grPortfolios.owner,grPortfolios.sys_id,grPositions.sys_id,grPositions.instrument);
			}
			else if (fPerformance > 10)
			{
				CreateInvestorTask('position_performance',10,grPortfolios.owner,grPortfolios.sys_id,grPositions.sys_id,grPositions.instrument);
			}
			
			
			// Trading Signals: Position sell or neutral
			var grSignals = new GlideRecord('x_snc_investor_signal');
			grSignals.addQuery('instrument','=',grPositions.instrument);
			var condition = grSignals.addQuery('signal','=','sell');
			//condition.addOrCondition('signal','=','neutral');
			grSignals.addQuery('date','>=',strDateReference);
			grSignals.query();
			while (grSignals.next())
			{
				CreateInvestorTask(
					'signal',
					0,
					grPortfolios.owner,
					grPortfolios.sys_id,
					grPositions.sys_id,
					grPositions.instrument,
					grSignals.sys_id);
			}
		}

		//Debug(x_snc_devtools.RenderValue(aInstruments));
	}
	
	// Trading Signals: Buy signals for instruments NOT in the user's portfolio
	var grBuySignals = new GlideRecord('x_snc_investor_signal');
	for (var nInstrument = 0; nInstrument < aInstruments.length; nInstrument++)
	{
		grBuySignals.addQuery('instrument','!=',aInstruments[nInstrument]);
	}
	var condition = grBuySignals.addQuery('signal','=','buy');
	//condition.addOrCondition('signal','=','neutral');
	grBuySignals.addQuery('date','>=',strDateReference);
	grBuySignals.query();
	while (grBuySignals.next())
	{
		Debug(x_snc_devtools.RenderValue(grBuySignals));
		CreateInvestorTask(
			'signal',
			0,
			strUserSysId,
			null,
			null,
			grBuySignals.instrument,
			grBuySignals.sys_id);
	}			

}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-12-08 17:36:06</sys_created_on>
        <sys_id>ab8f0071db5cc1d04647dad1f3961934</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>CreateInvestorTasksForUser</sys_name>
        <sys_package display_value="Investor WORK IN PROGRESS" source="x_snc_investor">8dc0a7971ba37050edf3642aab4bcbe0</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Investor WORK IN PROGRESS">8dc0a7971ba37050edf3642aab4bcbe0</sys_scope>
        <sys_update_name>sys_script_include_ab8f0071db5cc1d04647dad1f3961934</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-12-21 17:30:01</sys_updated_on>
    </sys_script_include>
</record_update>

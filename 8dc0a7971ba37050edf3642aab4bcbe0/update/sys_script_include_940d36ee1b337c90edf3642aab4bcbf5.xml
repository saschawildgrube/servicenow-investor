<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_investor.LoadNotationsForInstrument</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>LoadNotationsForInstrument</name>
        <script><![CDATA[function LoadNotationsForInstrument(strInstrumentSysId)
{
	var IsValidRecord = x_snc_devtools.IsValidRecord;
	var RenderValue = x_snc_devtools.RenderValue;
	var GetValue = x_snc_devtools.GetValue;
	var GetStringValue = x_snc_devtools.GetStringValue;
	var ArrayValueExists = x_snc_devtools.ArrayValueExists;
	var GetKeys = x_snc_devtools.GetKeys;

	var grInstrument = GetInstrumentRecord(strInstrumentSysId);
	if (IsValidRecord(grInstrument) == false)
	{
		return false;
	}
	
	if (IsValidISIN(grInstrument.isin))
	{
		var aSymbols = GetSymbolsFromISIN(grInstrument.isin);
		
		var symbols = {};
		for (var nSymbol = 0; nSymbol < aSymbols.length; nSymbol++)
		{
			var strExchCode = GetStringValue(GetValue(aSymbols,nSymbol,'exchCode'));
			if (strExchCode != '')
			{
				symbols[strExchCode] = aSymbols[nSymbol];
			}
		}
		
		//Debug(RenderValue(aSymbols));
		//Debug(RenderValue(symbols));
	
		var grExchanges = new GlideRecord('x_snc_investor_exchange');
		grExchanges.addQuery('active','=','true');
		grExchanges.addQuery('currency','!=','');
		grExchanges.addQuery('bloomberg_exchange_code','!=','');
		grExchanges.query();
		while (grExchanges.next())
		{
			var strExchangeCode = GetStringValue(grExchanges.bloomberg_exchange_code);

			if (ArrayValueExists(GetKeys(symbols),strExchangeCode))
			{
				Log(grInstrument.isin+' is traded at '+grExchanges.name+'!');
				var grNotation = new GlideRecord('x_snc_investor_notation');
				grNotation.addQuery('exchange','=',grExchanges.sys_id);
				grNotation.addQuery('currency','=',grExchanges.currency);
				grNotation.addQuery('instrument','=',grInstrument.sys_id);
				grNotation.query();
				if (grNotation.next() == false)
				{
					grNotation.initialize();
					grNotation.exchange = grExchanges.sys_id;
					grNotation.currency = grExchanges.currency;
					grNotation.instrument = grInstrument.sys_id;
					grNotation.symbol = symbols[strExchangeCode]['ticker'];
					grNotation.insert();
					Log('Adding notation!');

				}
			}
		}
	}
	
	var grNotations = new GlideRecord('x_snc_investor_notation');
	grNotations.addQuery('instrument','=',grInstrument.sys_id);
	grNotations.query();
	if (grNotations.getRowCount() < 1)
	{
		return false;
	}
	return true;
	
	return true;
	
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-11-16 17:39:43</sys_created_on>
        <sys_id>940d36ee1b337c90edf3642aab4bcbf5</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>LoadNotationsForInstrument</sys_name>
        <sys_package display_value="Investor WORK IN PROGRESS" source="x_snc_investor">8dc0a7971ba37050edf3642aab4bcbe0</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Investor WORK IN PROGRESS">8dc0a7971ba37050edf3642aab4bcbe0</sys_scope>
        <sys_update_name>sys_script_include_940d36ee1b337c90edf3642aab4bcbf5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-11-16 20:35:26</sys_updated_on>
    </sys_script_include>
</record_update>

<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_investor.CreateSignalsForNotation</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>CreateSignalsForNotation</name>
        <script><![CDATA[function CreateSignalsForNotation(strNotationSysId, strDateBegin, strDateEnd)
{
	// TODO: use events to generate trading signals!!!
	
	var RecordQueryOrInsert = x_snc_devtools.RecordQueryOrInsert;
	var GetStringValue = x_snc_devtools.GetStringValue;

	
	var grNotation = GetNotationRecord(strNotationSysId);
	if (grNotation == false)
	{
		return false;
	}

	strDateBegin = GetStringValue(strDateBegin);
	strDateEnd = GetStringValue(strDateEnd);

	/*
	if (strDateEnd == '')
	{
		strDateEnd = GetDateNow();
	}
	*/
	
	
	if (strDateBegin == '')
	{
		var gdt = new GlideDateTime();
		gdt.subtract(1000 * 60 * 60 * 24 * 15);
		strDateBegin = GetStringValue(gdt.getDate());
	}

	

	
	var grPriceDaily = new GlideRecord('x_snc_investor_price_daily');
	grPriceDaily.addQuery('notation','=',strNotationSysId);
	if (strDateBegin != '')
	{
		grPriceDaily.addQuery('date','>=',strDateBegin);
	}
	if (strDateEnd != '')
	{
		grPriceDaily.addQuery('date','<=',strDateEnd);
	}
	grPriceDaily.orderByDesc('date');
	grPriceDaily.query();
	
	while (grPriceDaily.next())
	{
		
		// Death Cross: SMA38 cross below SMA200
		if (grPriceDaily.sma38 < grPriceDaily.sma200)
		{
			var grPriceDailyPrev = new GlideRecord('x_snc_investor_price_daily');
			grPriceDailyPrev.setLimit(1);
			grPriceDailyPrev.orderByDesc('date');
			grPriceDailyPrev.addQuery('notation','=',strNotationSysId);
			grPriceDailyPrev.addQuery('date','<',grPriceDaily.date);
			grPriceDailyPrev.query();
			if (grPriceDailyPrev.next())
			{
				if (grPriceDailyPrev.sma38 > grPriceDaily.sma200)
				{
					RecordQueryOrInsert(
						'x_snc_investor_signal',
						{
							date: GetStringValue(grPriceDaily.date),
							name: 'SMA38 drops below SMA200 (Death Cross)',
							instrument: grNotation.instrument.sys_id
						},
						{
							signal: 'sell'
						},
						true);	
					
				}
			}
		}
		

		// Golden Cross: SMA38 cross above SMA200
		if (grPriceDaily.sma38 > grPriceDaily.sma200)
		{
			var grPriceDailyPrev = new GlideRecord('x_snc_investor_price_daily');
			grPriceDailyPrev.setLimit(1);
			grPriceDailyPrev.orderByDesc('date');
			grPriceDailyPrev.addQuery('notation','=',strNotationSysId);
			grPriceDailyPrev.addQuery('date','<',grPriceDaily.date);
			grPriceDailyPrev.query();
			if (grPriceDailyPrev.next())
			{
				if (grPriceDailyPrev.sma38 < grPriceDaily.sma200)
				{
					RecordQueryOrInsert(
						'x_snc_investor_signal',
						{
							date: GetStringValue(grPriceDaily.date),
							name: 'SMA38 raises above SMA200 (Golden Cross)',
							instrument: grNotation.instrument.sys_id
						},
						{
							signal: 'buy'
						},
						true);	
					
				}
			}
		}

		// Close crosses below SMA38
		if (grPriceDaily.close < grPriceDaily.sma38)
		{
			var grPriceDailyPrev = new GlideRecord('x_snc_investor_price_daily');
			grPriceDailyPrev.setLimit(1);
			grPriceDailyPrev.orderByDesc('date');
			grPriceDailyPrev.addQuery('notation','=',strNotationSysId);
			grPriceDailyPrev.addQuery('date','<',grPriceDaily.date);
			grPriceDailyPrev.query();
			if (grPriceDailyPrev.next())
			{
				if (grPriceDailyPrev.close > grPriceDaily.sma38)
				{
					RecordQueryOrInsert(
						'x_snc_investor_signal',
						{
							date: GetStringValue(grPriceDaily.date),
							name: 'Price drops below SMA38',
							instrument: grNotation.instrument.sys_id
						},
						{
							signal: 'sell'
						},
						true);	
					
				}
			}
		}

		// Close crosses above SMA200
		if (grPriceDaily.close > grPriceDaily.sma200)
		{
			var grPriceDailyPrev = new GlideRecord('x_snc_investor_price_daily');
			grPriceDailyPrev.setLimit(1);
			grPriceDailyPrev.orderByDesc('date');
			grPriceDailyPrev.addQuery('notation','=',strNotationSysId);
			grPriceDailyPrev.addQuery('date','<',grPriceDaily.date);
			grPriceDailyPrev.query();
			if (grPriceDailyPrev.next())
			{
				if (grPriceDailyPrev.close < grPriceDaily.sma200)
				{
					RecordQueryOrInsert(
						'x_snc_investor_signal',
						{
							date: GetStringValue(grPriceDaily.date),
							name: 'Price raises above SMA200',
							instrument: grNotation.instrument.sys_id
						},
						{
							signal: 'buy'
						},
						true);	
					
				}
			}
		}
		
		
		// Sudden gain: Daily performance above threshold 
		if (CalculatePerformance(grPriceDaily.open,grPriceDaily.close) >= 10)
		{
			RecordQueryOrInsert(
				'x_snc_investor_signal',
				{
					date: GetStringValue(grPriceDaily.date),
					name: 'Daily Performance > 10%',
					instrument: grNotation.instrument.sys_id
				},
				{
					signal: 'sell'
				},
				true);				
		}
		/*
		else if (CalculatePerformance(grPriceDaily.open,grPriceDaily.close) >= 5)
		{
			RecordQueryOrInsert(
				'x_snc_investor_signal',
				{
					date: GetStringValue(grPriceDaily.date),
					name: 'Daily Performance > 5%',
					instrument: grNotation.instrument.sys_id
				},
				{
					signal: 'neutral'
				},
				true);				
		}
		*/
		// Sudden loss: Daily performance below threshold 
		else if (CalculatePerformance(grPriceDaily.open,grPriceDaily.close) <= -10)
		{
			RecordQueryOrInsert(
				'x_snc_investor_signal',
				{
					date: GetStringValue(grPriceDaily.date),
					name: 'Daily Performance < -10%',
					instrument: grNotation.instrument.sys_id
				},
				{
					signal: 'sell'
				},
				true);				
		}
		/*
		else if (CalculatePerformance(grPriceDaily.open,grPriceDaily.close) <= -5)
		{
			RecordQueryOrInsert(
				'x_snc_investor_signal',
				{
					date: GetStringValue(grPriceDaily.date),
					name: 'Daily Performance < -5%',
					instrument: grNotation.instrument.sys_id
				},
				{
					signal: 'neutral'
				},
				true);				
		}*/
		
		
		
	}
		
	
	
	return true;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-11-28 16:55:54</sys_created_on>
        <sys_id>02d564ee1b848150edf3642aab4bcb93</sys_id>
        <sys_mod_count>27</sys_mod_count>
        <sys_name>CreateSignalsForNotation</sys_name>
        <sys_package display_value="Investor WORK IN PROGRESS" source="x_snc_investor">8dc0a7971ba37050edf3642aab4bcbe0</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Investor WORK IN PROGRESS">8dc0a7971ba37050edf3642aab4bcbe0</sys_scope>
        <sys_update_name>sys_script_include_02d564ee1b848150edf3642aab4bcb93</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-12-23 17:42:05</sys_updated_on>
    </sys_script_include>
</record_update>

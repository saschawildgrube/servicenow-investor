<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_investor.LoadExchanges</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>LoadExchanges</name>
        <script><![CDATA[function LoadExchanges()
{
	var IsValidRecord = x_snc_devtools.IsValidRecord;
	var GetRecord = x_snc_devtools.GetRecord;
	var IsArray = x_snc_devtools.IsArray;
	var GetStringValue = x_snc_devtools.GetStringValue;
	var GetValue = x_snc_devtools.GetValue;

	
	var gsa = new GlideSysAttachment();
	var grAttachments = gsa.getAttachments('sys_script_include', '027298311bfb3490edf3642aab4bcb83');

	while (grAttachments.next())
	{
		var strCsv = gsa.getContent(grAttachments);

		
		
		var aExchanges = x_snc_devtools.ParseCsv(strCsv);
	
		if (IsArray(aExchanges) == true)
		{
	
			for (var nExchange = 0; nExchange < aExchanges.length; nExchange++)
			{
				var exchange = aExchanges[nExchange];
		
				var strMIC = GetStringValue(GetValue(exchange,'ISO MIC'));
				var strName = GetStringValue(GetValue(exchange,'Description'));
				if (strMIC != '' && strName != '')
				{
					var strExchangeSysId = '';

					var grExchange = new GlideRecord('x_snc_investor_exchange');
					grExchange.addQuery('iso_mic','=',strMIC);
					grExchange.query();
					if (grExchange.next() == false)
					{
						var strCountry = GetStringValue(GetValue(exchange,'Country'));
						
						if (strCountry == 'USA')
						{
							strCountry = 'United States of America';
						}
						if (strCountry == 'Syria')
						{
							strCountry = 'Syrian Arab Republic';
						}
						if (strCountry == 'Vietnam')
						{
							strCountry = 'Viet Nam';
						}
						if (strCountry == 'Hong Kong')
						{
							strCountry = 'China, Hong Kong SAR';
						}
						if (strCountry == 'South Korea')
						{
							strCountry = 'Republic of Korea';
						}
						if (strCountry == 'The Netherlands')
						{
							strCountry = 'Netherlands';
						}
						if (strCountry == 'Russia')
						{
							strCountry = 'Russian Federation';
						}
						if (strCountry == 'Taiwan')
						{
							strCountry = 'Other non-specified areas';
						}
						if (strCountry == '')
						{
							strCountry = '';
						}
						if (strCountry == '')
						{
							strCountry = '';
						}
						

						
						var strCountrySysId = '';
						var grCountry = new GlideRecord('core_country');
						grCountry.addQuery('name','=',strCountry);
						grCountry.query();
						if (grCountry.next())
						{
							strCountrySysId = GetStringValue(grCountry.sys_id);
						}
						
						
						grExchange.initialize();
						grExchange.name = strName;
						grExchange.bloomberg_exchange_code = GetStringValue(GetValue(exchange,'Bloomberg Exchange Code'));
						grExchange.iso_mic = strMIC;
						grExchange.country = strCountrySysId;
						grExchange.insert();
					}
				}
			}
		}
		
	}	

}
	
	
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-11-13 21:19:11</sys_created_on>
        <sys_id>027298311bfb3490edf3642aab4bcb83</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>LoadExchanges</sys_name>
        <sys_package display_value="Investor WORK IN PROGRESS" source="x_snc_investor">8dc0a7971ba37050edf3642aab4bcbe0</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Investor WORK IN PROGRESS">8dc0a7971ba37050edf3642aab4bcbe0</sys_scope>
        <sys_update_name>sys_script_include_027298311bfb3490edf3642aab4bcb83</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-11-13 22:18:25</sys_updated_on>
    </sys_script_include>
</record_update>

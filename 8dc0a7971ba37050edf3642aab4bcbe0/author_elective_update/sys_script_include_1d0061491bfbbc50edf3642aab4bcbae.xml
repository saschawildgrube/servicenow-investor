<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="DELETE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_investor.CalculatePositions</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>CalculatePositions</name>
        <script><![CDATA[function CalculatePositions(strPortfolioSysId)
{
	var GetRecord = x_snc_devtools.GetRecord;
	var IsValidRecord = x_snc_devtools.IsValidRecord;
	var GetValue = x_snc_devtools.GetValue;
	var GetKeys = x_snc_devtools.GetKeys;
	var RenderValue = x_snc_devtools.RenderValue;
	var RecordQueryOrInsert = x_snc_devtools.RecordQueryOrInsert;
	var GetStringValue = x_snc_devtools.GetStringValue;

	strPortfolioSysId = GetStringValue(strPortfolioSysId);
	
	var grPortfolio = GetRecord('x_snc_investor_portfolio',strPortfolioSysId);
	if (IsValidRecord(grPortfolio) == false)
	{
		return false;
	}
	
	/*
	var grPosition = new GlideRecord('x_snc_investor_position');
	grPosition.addQuery('portfolio','=',strPortfolioSysId);
	grPosition.deleteMultiple();
	*/
	
	var positions = {};
	
	var fRealizedProfit = 0;
	var fRealizedLoss = 0;
	var fRealizedTotal = 0;
	
	var grTransaction = new GlideRecord('x_snc_investor_transaction');
	grTransaction.addQuery('portfolio','=',strPortfolioSysId);
	grTransaction.orderBy('date');
	grTransaction.query();
	while (grTransaction.next())
	{
		//Debug(RenderValue(grTransaction));
		var strInstrumentSysId = GetStringValue(grTransaction.instrument.sys_id);
		var strType = grTransaction.type;
		var nAmount = grTransaction.amount;
		var fPrice = grTransaction.price;
		var fCharges = grTransaction.charges;
		var strDate = GetStringValue(grTransaction.date);
		var instrument = GetValue(positions,strInstrumentSysId);
		if (instrument == null)
		{
			positions[strInstrumentSysId] = {
				amount: 0,
				price_avg: 0,
				charges: 0,
				start_date: ''
			};
		}
		
		if (strType == 'buy')
		{
			var strStartDate = positions[strInstrumentSysId]['start_date'];
			var nOldAmount = positions[strInstrumentSysId]['amount'];
			var nNewAmount = nOldAmount + nAmount;
			var fOldPriceAvg = positions[strInstrumentSysId]['price_avg'];
			var fOldCharges = positions[strInstrumentSysId]['charges'];
			var fNewPriceAvg = 
				(
					(fOldPriceAvg * nOldAmount)
					+ (nAmount * fPrice)
				) / nNewAmount;
			var strPriceAvgDate = strDate;
			if (nOldAmount == 0)
			{
				strStartDate = strDate;
			}
			positions[strInstrumentSysId]['price_avg'] = fNewPriceAvg;
			positions[strInstrumentSysId]['price_avg_date'] = strPriceAvgDate;
			positions[strInstrumentSysId]['amount'] = nNewAmount;
			positions[strInstrumentSysId]['charges'] = fOldCharges + fCharges;
			positions[strInstrumentSysId]['start_date'] = strStartDate;
		}
		if (strType == 'sell')
		{
			var nNewAmount = positions[strInstrumentSysId]['amount'] - nAmount;
			var fPriceAvg = positions[strInstrumentSysId]['price_avg'];
			var fOldCharges = positions[strInstrumentSysId]['charges'];
			
			var fNewCharges = fOldCharges + fCharges;
					
			var fRealizedTransaction = (nAmount * (fPrice - fPriceAvg)) - fNewCharges; 
			
			fRealizedTotal += fRealizedTransaction;
			if (fRealizedTransaction > 0)
			{
				fRealizedProfit += fRealizedTransaction;
			}
			else
			{
				fRealizedLoss += fRealizedTransaction;
			}
				
			
			if (nNewAmount <= 0)
			{
				nNewAmount = 0;
				fPriceAvg = 0;
				positions[strInstrumentSysId]['start_date'] = '';
				positions[strInstrumentSysId]['price_avg_date'] = '';
			}
			positions[strInstrumentSysId]['amount'] = nNewAmount;
			positions[strInstrumentSysId]['price_avg'] = fPriceAvg;
			positions[strInstrumentSysId]['charges'] = 0;
		}
		if (strType == 'dividend')
		{
			fRealizedTransaction = fPrice - fCharges;
			fRealizedTotal += fRealizedTransaction;
			if (fRealizedTransaction > 0)
			{
				fRealizedProfit += fRealizedTransaction;
			}
			else
			{
				fRealizedLoss += fRealizedTransaction;
			}
			
		}
	}

	//Debug(RenderValue(positions));
	
	var aInstruments = GetKeys(positions);
	
	for (var nInstrument = 0; nInstrument < aInstruments.length; nInstrument++)
	{
		var strInstrumentSysId = aInstruments[nInstrument];
		var position = positions[strInstrumentSysId];
		var nAmount = position.amount;
		if (nAmount > 0)
		{

			var fValue = 0;
			var fBestPrice = 0;
			var strBestPrice = '';
			var strBestPriceDate = '';
			var fCostbase = position.amount * position.price_avg
			var bestprice = GetBestPriceForInstrument(strInstrumentSysId,grPortfolio.currency);

			//var historicalprice = GetHistoricalPriceForInstrument(strInstrumentSysId,grPortfolio.currency,);

			
			if (bestprice != false)
			{
				fBestPrice = bestprice.price;
				strBestPriceDate = bestprice.date;
			}
			
			if (fBestPrice == 0)
			{
				fBestPrice = position.price_avg;
				strBestPriceDate = '';
				fValue = fCostbase;
			}
			else
			{
				fValue = fBestPrice * position.amount;
			}
			
			var fPerformance = ((fValue / fCostbase) * 100) - 100;
			var fGain = fValue - fCostbase;
				
			RecordQueryOrInsert(
				'x_snc_investor_position',
				{
					portfolio: strPortfolioSysId,
					instrument: strInstrumentSysId
				},
				{
					start_date: position.start_date,
					amount: position.amount,
					price_avg: position.price_avg,
					price_avg_date: position.price_avg_date,
					costbase: fCostbase,
					value: fValue,
					gain: fGain,
					performance: fPerformance,
					price_best: fBestPrice,
					price_best_date: strBestPriceDate
				},
				true);

		}
		else
		{
			var grPosition = new GlideRecord('x_snc_investor_position');
			grPosition.addQuery('portfolio','=',strPortfolioSysId);
			grPosition.addQuery('instrument','=',strInstrumentSysId);
			grPosition.query();
			grPosition.deleteMultiple();

		}
	}
	
	grPortfolio.realized_profit = fRealizedProfit;
	grPortfolio.realized_loss = fRealizedLoss;
	grPortfolio.realized_total = fRealizedTotal;
	grPortfolio.update();
	
	return true;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-11-11 19:05:27</sys_created_on>
        <sys_id>1d0061491bfbbc50edf3642aab4bcbae</sys_id>
        <sys_mod_count>55</sys_mod_count>
        <sys_name>CalculatePositions</sys_name>
        <sys_package display_value="Investor WORK IN PROGRESS" source="x_snc_investor">8dc0a7971ba37050edf3642aab4bcbe0</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Investor WORK IN PROGRESS">8dc0a7971ba37050edf3642aab4bcbe0</sys_scope>
        <sys_update_name>sys_script_include_1d0061491bfbbc50edf3642aab4bcbae</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-12-04 13:42:23</sys_updated_on>
    </sys_script_include>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Investor WORK IN PROGRESS">8dc0a7971ba37050edf3642aab4bcbe0</application>
        <file_path/>
        <instance_id>6b513d92dbe2fc100b9d21c4059619eb</instance_id>
        <instance_name>wildgrubedevparis</instance_name>
        <name>sys_script_include_1d0061491bfbbc50edf3642aab4bcbae</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_snc_investor.CalculatePositions&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;CalculatePositions&lt;/name&gt;&lt;script&gt;&lt;![CDATA[function CalculatePositions(strPortfolioSysId)
{
	var GetRecord = x_snc_devtools.GetRecord;
	var IsValidRecord = x_snc_devtools.IsValidRecord;
	var GetValue = x_snc_devtools.GetValue;
	var GetKeys = x_snc_devtools.GetKeys;
	var RenderValue = x_snc_devtools.RenderValue;
	var RecordQueryOrInsert = x_snc_devtools.RecordQueryOrInsert;
	var GetStringValue = x_snc_devtools.GetStringValue;

	strPortfolioSysId = GetStringValue(strPortfolioSysId);
	
	var grPortfolio = GetRecord('x_snc_investor_portfolio',strPortfolioSysId);
	if (IsValidRecord(grPortfolio) == false)
	{
		return false;
	}
	
	/*
	var grPosition = new GlideRecord('x_snc_investor_position');
	grPosition.addQuery('portfolio','=',strPortfolioSysId);
	grPosition.deleteMultiple();
	*/
	
	var positions = {};
	
	var fRealizedProfit = 0;
	var fRealizedLoss = 0;
	var fRealizedTotal = 0;
	
	var grTransaction = new GlideRecord('x_snc_investor_transaction');
	grTransaction.addQuery('portfolio','=',strPortfolioSysId);
	grTransaction.orderBy('date');
	grTransaction.query();
	while (grTransaction.next())
	{
		//Debug(RenderValue(grTransaction));
		var strInstrumentSysId = GetStringValue(grTransaction.instrument.sys_id);
		var strType = grTransaction.type;
		var nAmount = grTransaction.amount;
		var fPrice = grTransaction.price;
		var fCharges = grTransaction.charges;
		var strDate = GetStringValue(grTransaction.date);
		var instrument = GetValue(positions,strInstrumentSysId);
		if (instrument == null)
		{
			positions[strInstrumentSysId] = {
				amount: 0,
				price_avg: 0,
				charges: 0,
				start_date: ''
			};
		}
		
		if (strType == 'buy')
		{
			var strStartDate = positions[strInstrumentSysId]['start_date'];
			var nOldAmount = positions[strInstrumentSysId]['amount'];
			var nNewAmount = nOldAmount + nAmount;
			var fOldPriceAvg = positions[strInstrumentSysId]['price_avg'];
			var fOldCharges = positions[strInstrumentSysId]['charges'];
			var fNewPriceAvg = 
				(
					(fOldPriceAvg * nOldAmount)
					+ (nAmount * fPrice)
				) / nNewAmount;
			var strPriceAvgDate = strDate;
			if (nOldAmount == 0)
			{
				strStartDate = strDate;
			}
			positions[strInstrumentSysId]['price_avg'] = fNewPriceAvg;
			positions[strInstrumentSysId]['price_avg_date'] = strPriceAvgDate;
			positions[strInstrumentSysId]['amount'] = nNewAmount;
			positions[strInstrumentSysId]['charges'] = fOldCharges + fCharges;
			positions[strInstrumentSysId]['start_date'] = strStartDate;
		}
		if (strType == 'sell')
		{
			var nNewAmount = positions[strInstrumentSysId]['amount'] - nAmount;
			var fPriceAvg = positions[strInstrumentSysId]['price_avg'];
			var fOldCharges = positions[strInstrumentSysId]['charges'];
			
			var fNewCharges = fOldCharges + fCharges;
					
			var fRealizedTransaction = (nAmount * (fPrice - fPriceAvg)) - fNewCharges; 
			
			fRealizedTotal += fRealizedTransaction;
			if (fRealizedTransaction &gt; 0)
			{
				fRealizedProfit += fRealizedTransaction;
			}
			else
			{
				fRealizedLoss += fRealizedTransaction;
			}
				
			
			if (nNewAmount &lt;= 0)
			{
				nNewAmount = 0;
				fPriceAvg = 0;
				positions[strInstrumentSysId]['start_date'] = '';
				positions[strInstrumentSysId]['price_avg_date'] = '';
			}
			positions[strInstrumentSysId]['amount'] = nNewAmount;
			positions[strInstrumentSysId]['price_avg'] = fPriceAvg;
			positions[strInstrumentSysId]['charges'] = 0;
		}
		if (strType == 'dividend')
		{
			fRealizedTransaction = fPrice - fCharges;
			fRealizedTotal += fRealizedTransaction;
			if (fRealizedTransaction &gt; 0)
			{
				fRealizedProfit += fRealizedTransaction;
			}
			else
			{
				fRealizedLoss += fRealizedTransaction;
			}
			
		}
	}

	//Debug(RenderValue(positions));
	
	var aInstruments = GetKeys(positions);
	
	for (var nInstrument = 0; nInstrument &lt; aInstruments.length; nInstrument++)
	{
		var strInstrumentSysId = aInstruments[nInstrument];
		var position = positions[strInstrumentSysId];
		var nAmount = position.amount;
		if (nAmount &gt; 0)
		{

			var fValue = 0;
			var fBestPrice = 0;
			var strBestPrice = '';
			var strBestPriceDate = '';
			var fCostbase = position.amount * position.price_avg
			var bestprice = GetBestPriceForInstrument(strInstrumentSysId,grPortfolio.currency);

			//var historicalprice = GetHistoricalPriceForInstrument(strInstrumentSysId,grPortfolio.currency,);

			
			if (bestprice != false)
			{
				fBestPrice = bestprice.price;
				strBestPriceDate = bestprice.date;
			}
			
			if (fBestPrice == 0)
			{
				fBestPrice = position.price_avg;
				strBestPriceDate = '';
				fValue = fCostbase;
			}
			else
			{
				fValue = fBestPrice * position.amount;
			}
			
			var fPerformance = ((fValue / fCostbase) * 100) - 100;
			var fGain = fValue - fCostbase;
				
			RecordQueryOrInsert(
				'x_snc_investor_position',
				{
					portfolio: strPortfolioSysId,
					instrument: strInstrumentSysId
				},
				{
					start_date: position.start_date,
					amount: position.amount,
					price_avg: position.price_avg,
					price_avg_date: position.price_avg_date,
					costbase: fCostbase,
					value: fValue,
					gain: fGain,
					performance: fPerformance,
					price_best: fBestPrice,
					price_best_date: strBestPriceDate
				},
				true);

		}
		else
		{
			var grPosition = new GlideRecord('x_snc_investor_position');
			grPosition.addQuery('portfolio','=',strPortfolioSysId);
			grPosition.addQuery('instrument','=',strInstrumentSysId);
			grPosition.query();
			grPosition.deleteMultiple();

		}
	}
	
	grPortfolio.realized_profit = fRealizedProfit;
	grPortfolio.realized_loss = fRealizedLoss;
	grPortfolio.realized_total = fRealizedTotal;
	grPortfolio.update();
	
	return true;
}]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-11-11 19:05:27&lt;/sys_created_on&gt;&lt;sys_id&gt;1d0061491bfbbc50edf3642aab4bcbae&lt;/sys_id&gt;&lt;sys_mod_count&gt;55&lt;/sys_mod_count&gt;&lt;sys_name&gt;CalculatePositions&lt;/sys_name&gt;&lt;sys_package display_value="Investor WORK IN PROGRESS" source="x_snc_investor"&gt;8dc0a7971ba37050edf3642aab4bcbe0&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_scope display_value="Investor WORK IN PROGRESS"&gt;8dc0a7971ba37050edf3642aab4bcbe0&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_1d0061491bfbbc50edf3642aab4bcbae&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-12-04 13:42:23&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
        <payload_hash>226494030</payload_hash>
        <record_name>CalculatePositions</record_name>
        <reverted_from/>
        <source>20f4c384db5881904647dad1f3961958</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-12-04 13:42:23</sys_created_on>
        <sys_id>4db33a90db1045904647dad1f396199f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>17d85ae79830000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-12-04 13:42:23</sys_updated_on>
        <type>Script Include</type>
        <update_guid>49b33650ab104590999f5d4e1ab75efe</update_guid>
        <update_guid_history>49b33650ab104590999f5d4e1ab75efe:226494030,f333369cb1dc0590a89dd6fdd0ce4242:1901731322,28314d2326084d505ca2047f93b68148:-2047007422,5aff306fb2c44d504c535f5b4fbb6dfd:110710706,d485a083be08095038384e6eaa59def1:-1487394497,3925a8439c080950fbbd8ece4b17539d:205247891,30d4e003860809508f97b712a1278ae1:-1771026371,03742c0f45c409500893eba41e8f50cd:-2055788195,f9342c0f2cc40950aeee4bc8d5c8e770:373266434,e7e3a40f3ac409502d85a55ba197b178:-1928641320,92d3e00f57c409503f309e32623d15fc:419994182,c628d4aa48048150d28a17b0785f381c:418857023,580894aa260481504bc79489f88ae7bf:625046040,96a07712098c4150eac6292340a1a91d:1669217688,a78033de1a4c4150a48ebc6d8018ca41:-187936028,819944da64cccd10f90a6321f6a0df6b:-122808215,c96980da77cccd10da1fb1a0f8af4413:-1330625779,3c373b8a554ccd10a9ee706cb5ede1b3:-1370580574,ed76fb4a394ccd10cd5a69b00f7845aa:-1831351459,d6eae3c60bc8cd10c07747ee24853671:-1712420390,e8dae30e83c8cd10c5a8c4de619d0355:954091867,7378abc2cbc8cd10c42884df7a6104c4:2032403860,e0b7a30245c8cd10f96574dfbd17b7a4:1176586527,edf5274a7a88cd103febe9e770b42c92:-1365529565,af142bc29588cd10901e2c6af7841722:947952223,5e92e3c26988cd101478c14d39122513:1474796167,b4326f828d88cd101e2a860d2ff82ae9:1234105341,32725a0db30c45104ae69088679157a4:612262972,b770fcd04a80c9d0b672f1cde38759ce:2062595161,e40f68906680c9d00ea0cda38b5c9d1c:97756339,d0c928d49b40c9d056f03f9576b7764a:1568716186,0e49a0d4ca40c9d04f6ae919fc036ba6:1696990719,b67d1c805f0c09d0722bb51830b5b783:1354958145,6e8a900ce8c809d05f0f1c77e7ed6e6b:-567869882,90995808f3c809d02297a472a8d5fb4e:-1761587195,9e69d40870c809d056e7d6303ac32469:574011732,ddd8584060c809d06a471e82ce84b525:-1580174586,ab38133bffb338d01137f174e5cfbbba:1796065171,a53657f7d6b338d0cb0a1b73d255abbb:-141377270,4df60b6fecfb74d074dbe4cfda72b2e5:-1254809217,a3a5072bc6fb74d0e52d2f89c1cd5743:-604624171,0395432bbdfb74d0cc2e6683773e5e40:-1272154300,ebf48b67ebfb74d0cf96a1d05c0f430c:1513888612,7ab443673dfb74d0ee424affad2d28aa:-2008461427,076aad89cc7fbc50b0ece0ae69395a1c:-312718285,5099a1857f7fbc500700cad336455304:338885747,f0d8e9051e7fbc5055a473dba6c9df93:-1784511373,90186541617fbc50e3fa06eab5807b8d:6768590,09762949c73fbc509231120dc92627ae:1399781118,95162149483fbc50fd87946d35317e4d:-1732264127,acc521091a3fbc50b77ad15d20d15a51:-486063905,fda569c5393fbc5095eed050a9088f4d:286562048,f625ad85863fbc508f8ca908318a7692:-1041717535,7ac4a9858d3fbc505f31830f28923923:1554134382,e384e5850c3fbc5048e56c6518aa7963:659477085,4911ed0df3fbbc500b9846cf7d9e0a8f:-1348362916</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-12-04 13:43:14</sys_created_on>
        <sys_db_object display_value="" name="sys_script_include">sys_script_include</sys_db_object>
        <sys_id>6733893820bd4ca8b0346c3f1fa816c1</sys_id>
        <sys_metadata>1d0061491bfbbc50edf3642aab4bcbae</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CalculatePositions</sys_name>
        <sys_package display_value="Investor WORK IN PROGRESS" source="x_snc_investor">8dc0a7971ba37050edf3642aab4bcbe0</sys_package>
        <sys_parent/>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Investor WORK IN PROGRESS">8dc0a7971ba37050edf3642aab4bcbe0</sys_scope>
        <sys_scope_delete display_value="">40edf66b06de404eb14842c9296dcff1</sys_scope_delete>
        <sys_update_name>sys_script_include_1d0061491bfbbc50edf3642aab4bcbae</sys_update_name>
        <sys_update_version display_value="sys_script_include_1d0061491bfbbc50edf3642aab4bcbae">4db33a90db1045904647dad1f396199f</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-12-04 13:43:14</sys_updated_on>
    </sys_metadata_delete>
</record_update>
